{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Box, Button, Center, FormControl, Heading, Input, VStack } from 'native-base';\nimport React, { useState } from 'react';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from \"../config/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction RegisterScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmationPassword = _useState6[0],\n      setConfirmationPassword = _useState6[1];\n\n  var onHandleRegister = function onHandleRegister() {\n    if (password != confirmationPassword) {\n      console.log('Password and confirmation is not match');\n      return '';\n    }\n\n    createUserWithEmailAndPassword(auth, email, password).then(function () {\n      return console.log(\"Register success\");\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsx(Center, {\n    w: \"100%\",\n    children: _jsxs(Box, {\n      safeArea: true,\n      p: \"2\",\n      w: \"90%\",\n      maxW: \"290\",\n      py: \"8\",\n      children: [_jsx(Heading, {\n        size: \"lg\",\n        color: \"coolGray.800\",\n        _dark: {\n          color: \"warmGray.50\"\n        },\n        fontWeight: \"semibold\",\n        children: \"Welcome\"\n      }), _jsx(Heading, {\n        mt: \"1\",\n        color: \"coolGray.600\",\n        _dark: {\n          color: \"warmGray.200\"\n        },\n        fontWeight: \"medium\",\n        size: \"xs\",\n        children: \"Sign up to continue!\"\n      }), _jsxs(VStack, {\n        space: 3,\n        mt: \"5\",\n        children: [_jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Email\"\n          }), _jsx(Input, {\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Password\"\n          }), _jsx(Input, {\n            type: \"password\",\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Confirm Password\"\n          }), _jsx(Input, {\n            type: \"password\",\n            onChangeText: function onChangeText(text) {\n              return setConfirmationPassword(text);\n            }\n          })]\n        }), _jsx(Button, {\n          mt: \"2\",\n          colorScheme: \"indigo\",\n          onPress: function onPress() {\n            return onHandleRegister();\n          },\n          children: \"Sign up\"\n        })]\n      })]\n    })\n  });\n}\n\nexport default RegisterScreen;","map":{"version":3,"sources":["C:/laragon/www/Mobile-react/src/Screens/SignUpScreen.js"],"names":["Box","Button","Center","FormControl","Heading","Input","VStack","React","useState","createUserWithEmailAndPassword","auth","RegisterScreen","email","setEmail","password","setPassword","confirmationPassword","setConfirmationPassword","onHandleRegister","console","log","then","catch","error","alert","message","color","text"],"mappings":"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","sourcesContent":["import { Box, Button, Center, FormControl, Heading, Input, VStack } from 'native-base'\r\nimport React, { useState } from 'react'\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth'\r\nimport { auth } from '../config/firebase'\r\n\r\nfunction RegisterScreen() {\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmationPassword, setConfirmationPassword] = useState(\"\")\r\n\r\n  const onHandleRegister = () => {\r\n    if (password != confirmationPassword) {\r\n      console.log('Password and confirmation is not match')\r\n      return ''\r\n    }\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then(() => console.log(\"Register success\"))\r\n      .catch((error) => alert(error.message));\r\n  }\r\n  return (\r\n    <Center w=\"100%\">\r\n      <Box safeArea p=\"2\" w=\"90%\" maxW=\"290\" py=\"8\">\r\n        <Heading size=\"lg\" color=\"coolGray.800\" _dark={{\r\n        color: \"warmGray.50\"\r\n      }} fontWeight=\"semibold\">\r\n          Welcome\r\n        </Heading>\r\n        <Heading mt=\"1\" color=\"coolGray.600\" _dark={{\r\n        color: \"warmGray.200\"\r\n      }} fontWeight=\"medium\" size=\"xs\">\r\n          Sign up to continue!\r\n        </Heading>\r\n        <VStack space={3} mt=\"5\">\r\n          <FormControl>\r\n            <FormControl.Label>Email</FormControl.Label>\r\n            <Input onChangeText={(text) => setEmail(text)} />\r\n          </FormControl>\r\n          <FormControl>\r\n            <FormControl.Label>Password</FormControl.Label>\r\n            <Input type=\"password\" onChangeText={(text) => setPassword(text)} />\r\n          </FormControl>\r\n          <FormControl>\r\n            <FormControl.Label>Confirm Password</FormControl.Label>\r\n            <Input type=\"password\" onChangeText={(text) => setConfirmationPassword(text)} />\r\n          </FormControl>\r\n          <Button mt=\"2\" colorScheme=\"indigo\" onPress={() => onHandleRegister()}>\r\n            Sign up\r\n          </Button>\r\n        </VStack>\r\n      </Box>\r\n    </Center>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen"]},"metadata":{},"sourceType":"module"}